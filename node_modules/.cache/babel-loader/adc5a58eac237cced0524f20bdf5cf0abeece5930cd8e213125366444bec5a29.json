{"ast":null,"code":"var _jsxFileName = \"/Users/amani/Desktop/7-team/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nconst getTokenFromUrl = () => {\n  return window.location.hash.substring(1).split('&').reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\nconst CLIENT_ID = '9f9e746f4f604bbe9331529d75394009';\nconst REDIRECT_URI = 'http://localhost:3000/callback';\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\nconst RESPONSE_TYPE = 'code';\nfunction App() {\n  _s();\n  const [spotifyToken, setSpotifyToken] = useState(\"\");\n  const [topTracks, setTopTracks] = useState({});\n  const [topArtists, setTopArtists] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    console.log(\"This is what we derived from the URL: \", getTokenFromUrl());\n    const spotifyToken = getTokenFromUrl().access_token;\n    window.location.hash = \"\";\n    console.log(\"This is our spotify token:\", spotifyToken);\n    if (spotifyToken) {\n      setSpotifyToken(spotifyToken);\n      //use spotify api\n      spotifyApi.setAccessToken(spotifyToken);\n      spotifyApi.getMe().then(user => {\n        console.log(user);\n      });\n      setLoggedIn(true);\n    }\n  });\n  const getTopTracks = () => {\n    spotifyApi.getMyTopTracks().then(response => {\n      console.log(\"This is the response from getMyTopTracks: \", response);\n      setTopTracks(response);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!loggedIn && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://localhost:3000\",\n      children: \" Login to Spotify \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), loggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Top Tracks: \", topTracks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getTopTracks(),\n      children: \"Get Top Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n}\n_s(App, \"68jySOPAqCcfWEU2rXD9jlikCe0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SpotifyWebApi","jsxDEV","_jsxDEV","Fragment","_Fragment","spotifyApi","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","App","_s","spotifyToken","setSpotifyToken","topTracks","setTopTracks","topArtists","setTopArtists","loggedIn","setLoggedIn","console","log","access_token","setAccessToken","getMe","then","user","getTopTracks","getMyTopTracks","response","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/amani/Desktop/7-team/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nconst spotifyApi = new SpotifyWebApi();\n\nconst getTokenFromUrl = () => {\n    return window.location.hash.substring(1).split('&').reduce((initial, item) => {\n        let parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n\n        return initial;\n    },{}); \n};\n\nconst CLIENT_ID = '9f9e746f4f604bbe9331529d75394009';\nconst REDIRECT_URI = 'http://localhost:3000/callback';\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\nconst RESPONSE_TYPE = 'code';\n\nfunction App() {\n    const [spotifyToken, setSpotifyToken] = useState(\"\");\n    const [topTracks, setTopTracks] = useState({})\n    const [topArtists, setTopArtists] = useState({})\n    const [loggedIn, setLoggedIn] = useState(false)\n\n    useEffect(() => {\n        console.log(\"This is what we derived from the URL: \", getTokenFromUrl())\n        const spotifyToken = getTokenFromUrl().access_token\n        window.location.hash = \"\";\n        console.log(\"This is our spotify token:\", spotifyToken);\n\n        if (spotifyToken) {\n            setSpotifyToken(spotifyToken)\n            //use spotify api\n            spotifyApi.setAccessToken(spotifyToken)\n            spotifyApi.getMe().then((user) => {\n                console.log(user)\n            })  \n            setLoggedIn(true)\n        }\n    })\n\n    const getTopTracks = () => {\n        spotifyApi.getMyTopTracks().then((response) => {\n            console.log(\"This is the response from getMyTopTracks: \", response)\n            setTopTracks(response)\n        })\n    }\n\n    return (<div className=\"App\">\n        {!loggedIn && \n        <a href=\"http://localhost:3000\"> Login to Spotify </a>}\n        {loggedIn && (<> \n        <div>Top Tracks: {topTracks}</div>\n        </>)}\n        {loggedIn && <button onClick={getTopTracks()}>Get Top Tracks</button>}\n    </div>);\n\n        }\n    \n        export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}