{"ast":null,"code":"var _jsxFileName = \"/Users/amani/Documents/7-team/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, Button } from 'react-native';\nimport { authorize } from 'react-native-app-auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  clientId: '9f9e746f4f604bbe9331529d75394009',\n  clientSecret: '98269e0b4df84cbba1997148f0e13c7b',\n  // Note: It's not recommended to hardcode the client secret in a production app\n  redirectUrl: 'http://localhost:3000/callback',\n  scopes: ['user-top-read'],\n  serviceConfiguration: {\n    authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n    tokenEndpoint: 'https://accounts.spotify.com/api/token'\n  }\n};\nconst App = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const handleSpotifyLogin = async () => {\n    try {\n      const authState = await authorize(config);\n      fetchData(authState.accessToken);\n    } catch (error) {\n      console.log('Login failed', error);\n    }\n  };\n  const fetchData = async accessToken => {\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me/top/tracks', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      setUserData(data.items); // Assuming the response has an 'items' array\n    } catch (error) {\n      console.error('Error fetching data', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Spotify Top Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", !userData && /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Login with Spotify\",\n      onPress: handleSpotifyLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", userData && userData.map((track, index) => /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.track,\n      children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", track.name, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)), \"\\xA0\\xA0\\xA0\\xA0\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hXjgW5Dna7AfY8GclqpRKYNaYWw=\");\n_c = App;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  track: {\n    fontSize: 18,\n    marginTop: 5\n  }\n});\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","Button","authorize","jsxDEV","_jsxDEV","config","clientId","clientSecret","redirectUrl","scopes","serviceConfiguration","authorizationEndpoint","tokenEndpoint","App","_s","userData","setUserData","handleSpotifyLogin","authState","fetchData","accessToken","error","console","log","response","fetch","headers","Authorization","data","json","items","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onPress","map","track","index","name","_c","create","flex","alignItems","justifyContent","backgroundColor","fontSize","fontWeight","marginBottom","marginTop","$RefreshReg$"],"sources":["/Users/amani/Documents/7-team/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, Button } from 'react-native';\nimport { authorize } from 'react-native-app-auth';\n\nconst config = {\n  clientId: '9f9e746f4f604bbe9331529d75394009',\n  clientSecret: '98269e0b4df84cbba1997148f0e13c7b', // Note: It's not recommended to hardcode the client secret in a production app\n  redirectUrl: 'http://localhost:3000/callback',\n  scopes: ['user-top-read'],\n  serviceConfiguration: {\n    authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n    tokenEndpoint: 'https://accounts.spotify.com/api/token',\n  },\n};\n\nconst App = () => {\n  const [userData, setUserData] = useState(null);\n\n  const handleSpotifyLogin = async () => {\n    try {\n      const authState = await authorize(config);\n      fetchData(authState.accessToken);\n    } catch (error) {\n      console.log('Login failed', error);\n    }\n  };\n\n  const fetchData = async (accessToken) => {\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me/top/tracks', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      const data = await response.json();\n      setUserData(data.items); // Assuming the response has an 'items' array\n    } catch (error) {\n      console.error('Error fetching data', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Spotify Top Tracks</Text>\n      {!userData && <Button title=\"Login with Spotify\" onPress={handleSpotifyLogin} />}\n      {userData && (\n        userData.map((track, index) => (\n          <Text key={index} style={styles.track}>\n            {track.name}\n          </Text>\n        ))\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  track: {\n    fontSize: 18,\n    marginTop: 5,\n  },\n});\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}