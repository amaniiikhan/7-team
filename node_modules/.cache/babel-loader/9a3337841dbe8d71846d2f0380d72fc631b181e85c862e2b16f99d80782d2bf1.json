{"ast":null,"code":"var _jsxFileName = \"/Users/amani/Documents/7-team/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = '9f9e746f4f604bbe9331529d75394009';\nconst REDIRECT_URI = 'http://localhost:3000/callback';\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\nconst RESPONSE_TYPE = 'code';\nconst generateRandomTrack = () => {\n  const artists = ['Artist 1', 'Artist 2', 'Artist 3']; // Replace with your own artist names\n  const randomArtist = artists[Math.floor(Math.random() * artists.length)];\n  return {\n    name: `Random Track ${Math.floor(Math.random() * 100)}`,\n    artists: [{\n      name: randomArtist\n    }]\n  };\n};\nconst App = () => {\n  _s();\n  const [code, setCode] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [signupData, setSignupData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authCode = urlParams.get('code');\n    if (authCode) {\n      setCode(authCode);\n      exchangeCodeForToken(authCode);\n    }\n  }, []);\n  const exchangeCodeForToken = async code => {\n    try {\n      const response = await fetch('http://localhost:3001/exchange-token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code\n        })\n      });\n      const data = await response.json(); // Declare data here\n      setAccessToken(data.access_token);\n      console.log('Access Token:', data.access_token); // Debug: Check access token\n    } catch (error) {\n      console.error('Error exchanging token:', error);\n    }\n  };\n  useEffect(() => {\n    if (!accessToken) return;\n    fetchTopTracks();\n  }, [accessToken]);\n  const fetchTopTracks = async () => {\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me/top/tracks', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      console.log('Top Tracks Response:', data); // Debug: Check the response\n\n      if (data && data.items) {\n        setTopTracks(data.items);\n        console.log('Top Tracks Data:', data.items); // Debug: Check the data items\n      } else {\n        console.log('No items found in response'); // Debug: No items in response\n      }\n    } catch (error) {\n      console.error('Error fetching top tracks:', error);\n    }\n  };\n  const handleInputChange = e => {\n    setSignupData({\n      ...signupData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSignup = e => {\n    e.preventDefault();\n    console.log(signupData);\n    // Handle the signup logic here (e.g., sending data to backend)\n  };\n  const handleLogin = () => {\n    window.location.href = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&show_dialog=true`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: !code ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignup,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: signupData.username,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: signupData.email,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: signupData.password,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"signup-button\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"spotify-login-button\",\n        children: \"Login with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: accessToken && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Top Tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: topTracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [track.name, \" by \", track.artists[0].name]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zYZjS3r+kydfvtpSD+vM5zBouKQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","generateRandomTrack","artists","randomArtist","Math","floor","random","length","name","App","_s","code","setCode","accessToken","setAccessToken","topTracks","setTopTracks","signupData","setSignupData","username","email","password","urlParams","URLSearchParams","window","location","search","authCode","get","exchangeCodeForToken","response","fetch","method","headers","body","JSON","stringify","data","json","access_token","console","log","error","fetchTopTracks","Authorization","items","handleInputChange","e","target","value","handleSignup","preventDefault","handleLogin","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","onClick","map","track","index","_c","$RefreshReg$"],"sources":["/Users/amani/Documents/7-team/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst CLIENT_ID = '9f9e746f4f604bbe9331529d75394009';\nconst REDIRECT_URI = 'http://localhost:3000/callback';\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\nconst RESPONSE_TYPE = 'code';\n\nconst generateRandomTrack = () => {\n  const artists = ['Artist 1', 'Artist 2', 'Artist 3']; // Replace with your own artist names\n  const randomArtist = artists[Math.floor(Math.random() * artists.length)];\n  return {\n    name: `Random Track ${Math.floor(Math.random() * 100)}`,\n    artists: [{ name: randomArtist }],\n  };\n};\n\nconst App = () => {\n    const [code, setCode] = useState(null);\n    const [accessToken, setAccessToken] = useState(null);\n    const [topTracks, setTopTracks] = useState([]);\n\n    const [signupData, setSignupData] = useState({\n      username: '',\n      email: '',\n      password: ''\n  });\n\n    useEffect(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        const authCode = urlParams.get('code');\n\n        if (authCode) {\n            setCode(authCode);\n            exchangeCodeForToken(authCode);\n        }\n    }, []);\n\n    const exchangeCodeForToken = async (code) => {\n      try {\n          const response = await fetch('http://localhost:3001/exchange-token', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({ code }),\n          });\n          const data = await response.json(); // Declare data here\n          setAccessToken(data.access_token);\n          console.log('Access Token:', data.access_token); // Debug: Check access token\n      } catch (error) {\n          console.error('Error exchanging token:', error);\n      }\n  };\n\n    useEffect(() => {\n      if (!accessToken) return;\n      fetchTopTracks();\n  }, [accessToken]);\n\n\n  const fetchTopTracks = async () => {\n    try {\n        const response = await fetch('https://api.spotify.com/v1/me/top/tracks', {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        });\n        const data = await response.json();\n        console.log('Top Tracks Response:', data); // Debug: Check the response\n\n        if (data && data.items) {\n            setTopTracks(data.items);\n            console.log('Top Tracks Data:', data.items); // Debug: Check the data items\n        } else {\n            console.log('No items found in response'); // Debug: No items in response\n        }\n    } catch (error) {\n        console.error('Error fetching top tracks:', error);\n    }\n};\n\n\n    const handleInputChange = (e) => {\n        setSignupData({\n            ...signupData,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSignup = (e) => {\n        e.preventDefault();\n        console.log(signupData);\n        // Handle the signup logic here (e.g., sending data to backend)\n    };\n\n    const handleLogin = () => {\n        window.location.href = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}&show_dialog=true`;\n    };\n\n    return (\n    <div className=\"app-container\">\n        {!code ? (\n            <div className=\"signup-container\">\n                <h2>Sign Up</h2>\n                <form onSubmit={handleSignup}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input \n                            type=\"text\" \n                            id=\"username\" \n                            name=\"username\" \n                            value={signupData.username} \n                            onChange={handleInputChange}\n                            required \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input \n                            type=\"email\" \n                            id=\"email\" \n                            name=\"email\" \n                            value={signupData.email} \n                            onChange={handleInputChange}\n                            required \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input \n                            type=\"password\" \n                            id=\"password\" \n                            name=\"password\" \n                            value={signupData.password} \n                            onChange={handleInputChange}\n                            required \n                        />\n                    </div>\n                    <button type=\"submit\" className=\"signup-button\">Sign Up</button>\n                </form>\n                <button onClick={handleLogin} className=\"spotify-login-button\">Login with Spotify</button>\n            </div>\n        ) : (\n            <div>\n                {accessToken && (\n   <div>\n   <h2>Top Tracks</h2>\n   <ul>\n     {topTracks.map((track, index) => (\n       <li key={index}>{track.name} by {track.artists[0].name}</li>\n     ))}\n   </ul>\n </div>\n)}\n\n            </div>\n        )}\n    </div>\n);\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}